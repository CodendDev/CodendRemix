version: "3.8"
services:
  codendui:
    build:
      context: .
      dockerfile: Dockerfile
      target: "development"
    depends_on:
      nginx:
        condition: "service_healthy"
    environment:
      API_SERVER: http://nginx
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app/app:ro
      - /app/node_modules
    networks:
      - codend_ui_backend

  # DEPENDENCIES
  nginx:
    container_name: codend_ui_nginx
    image: nginx:1.25.3
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://backend:5000/",
          "||",
          "curl -f http://fusionauth:9011/api/status"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "8080:80"
    volumes:
      - "./nginx:/etc/nginx:ro"
    networks:
      - codend_ui_backend

  backend:
    container_name: codend_ui_api
    image: maksimowiczm/codendapi
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - "ConnectionStrings:PostgresDatabase=Host=postgres; Database=codendDatabase; Username=${POSTGRES_USER}; Password=${POSTGRES_PASSWORD}"
      - "Fusionauth:ApiKey=${FUSIONAUTH_API_KEY}"
      - "Fusionauth:ApiUrl=http://fusionauth:9011/"
      - "Fusionauth:Issuer=${FUSIONAUTH_ISSUER}"
      - "Fusionauth:ApplicationId=${FUSIONAUTH_APPLICATION_ID}"
      - "Fusionauth:SigningKey=${FUSIONAUTH_SIGNING_KEY}"
      - "Fusionauth:TenantId=${FUSIONAUTH_TENANT_ID}"
      - "ASPNETCORE_URLS=http://+:5000"
    networks:
      - codend_ui_database
      - codend_ui_backend

  postgres:
    container_name: ui_codend_postgres
    image: postgres:16.1
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      PGDATA: /var/lib/postgresql/data/
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - codend_ui_database
    volumes:
      - codend_ui_db_data:/var/lib/postgresql/data

  fusionauth:
    container_name: ui_codend_fusionauth
    image: fusionauth/fusionauth-app:1.48.3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      SEARCH_TYPE: database
      FUSIONAUTH_APP_KICKSTART_FILE: ${FUSIONAUTH_APP_KICKSTART_FILE}
    networks:
      - codend_ui_database
    volumes:
      - codend_ui_fusionauth_config:/usr/local/fusionauth/config
      - ./kickstart:/usr/local/fusionauth/kickstart

networks:
  codend_ui_database:
  codend_ui_backend:

volumes:
  codend_ui_db_data:
  codend_ui_fusionauth_config: